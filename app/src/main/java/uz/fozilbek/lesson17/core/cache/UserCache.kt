package uz.fozilbek.lesson17.core.cacheimport android.content.Contextimport android.content.SharedPreferencesimport uz.fozilbek.lesson17.core.data.UserModelobject UserCache {    private lateinit var sharedPreferences: SharedPreferences    private val keyImage = "user_image_index_"    private val keyName = "user_name_"    private val keyBackground = "user_background_"    private val keyFollowers = "user_followers_"    fun init(context: Context) {        sharedPreferences = context.getSharedPreferences("user_cache", Context.MODE_PRIVATE)    }//val imageIndex: Int,// val backgroundColor: String,// val userName: String,// val userFollowers: Int    fun addUser(userModel: UserModel) {        var index = getLastIndex()        sharedPreferences.edit().putInt("$keyImage$index", userModel.imageIndex).apply()        sharedPreferences.edit().putString("$keyBackground$index", userModel.backgroundColor).apply()        sharedPreferences.edit().putString("$keyName$index", userModel.userName).apply()        sharedPreferences.edit().putInt("$keyFollowers$index", userModel.userFollowers).apply()        saveIndex(++index)    }    fun getUsers(): ArrayList<UserModel> {        val userList=ArrayList<UserModel>()        val totalUsers= getLastIndex()        for (i in 0 until totalUsers) {            val userData= getUserData(i)            userList.add(userData)        }        return userList    }    fun getUserData(index: Int): UserModel {        return UserModel(            imageIndex = sharedPreferences.getInt("$keyImage$index", 1),            userFollowers = sharedPreferences.getInt("$keyFollowers$index", 0),            userName = sharedPreferences.getString("$keyName$index", "No name")!! ,            backgroundColor = sharedPreferences.getString("$keyBackground$index", "#ff0000")!! ,        )    }    fun getSharedID(str:String){        var index=0        for (i in 0 until getLastIndex()){            if (str==sharedPreferences.getString("$keyName$i", "No name")!!){                index=i            }        }       sharedPreferences.edit().remove("$keyName$index").apply()       sharedPreferences.edit().remove("$keyImage$index").apply()       sharedPreferences.edit().remove("$keyFollowers$index").apply()       sharedPreferences.edit().remove("$keyBackground$index").apply()    }    fun getSharedEditId(str:String):Int{        var index=0        for (i in 0 until getLastIndex()){            if (str==sharedPreferences.getString("$keyName$i", "No name")!!){                index=i            }        }    return index    }    fun editUserSaver(userModel: UserModel,index:Int) {        sharedPreferences.edit().putInt("$keyImage$index", userModel.imageIndex).apply()        sharedPreferences.edit().putString("$keyBackground$index", userModel.backgroundColor).apply()        sharedPreferences.edit().putString("$keyName$index", userModel.userName).apply()        sharedPreferences.edit().putInt("$keyFollowers$index", userModel.userFollowers).apply()    }    private fun saveIndex(index: Int) {        sharedPreferences.edit().putInt("last_index", index).apply()    }    fun getLastIndex(): Int {        return sharedPreferences.getInt("last_index", 0)    }}